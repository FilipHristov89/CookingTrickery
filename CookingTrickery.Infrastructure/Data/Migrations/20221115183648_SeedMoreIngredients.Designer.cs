// <auto-generated />
using System;
using CookingTrickery.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CookingTrickery.Infrastructure.Data.Migrations
{
    [DbContext(typeof(CookingTrickeryDbContext))]
    [Migration("20221115183648_SeedMoreIngredients")]
    partial class SeedMoreIngredients
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CookingTrickery.Infrastructure.Data.Entities.Cuisine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(800)
                        .HasColumnType("nvarchar(800)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("Cuisines");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ff8540f2-e7c9-4546-a7d9-f25b42c72b50"),
                            Description = "British cuisine is the specific set of cooking traditions and practices associated with the United Kingdom. Historically, British cuisine meant \"unfussy dishes made with quality local ingredients, matched with simple sauces to accentuate flavour, rather than disguise it\". International recognition of British cuisine was historically limited to the full breakfast and the Christmas dinner. However, Celtic agriculture and animal breeding produced a wide variety of foodstuffs for indigenous Celts. Anglo-Saxon England developed meat and savoury herb stewing techniques before the practice became common in Europe. The Norman conquest introduced exotic spices into Great Britain in the Middle Ages",
                            ImageUrl = "https://fullsuitcase.com/wp-content/uploads/2021/01/Traditional-British-food.jpg",
                            Name = "British Cuisine"
                        },
                        new
                        {
                            Id = new Guid("b0de4591-35bc-4500-b84f-ee04c64775ea"),
                            Description = "Mexican cuisine consists of the cooking cuisines and traditions of the modern country of Mexico. Its earliest roots lie in Mesoamerican cuisine. Its ingredients and methods begin with the first agricultural communities such as the Maya who domesticated maize, created the standard process of maize nixtamalization, and established their foodways (Maya cuisine). Successive waves of other Mesoamerican groups brought with them their own cooking methods. These included: the Olmec, Teotihuacanos, Toltec, Huastec, Zapotec, Mixtec, Otomi, Purépecha, Totonac, Mazatec, Mazahua, and Nahua. With the Mexica formation of the multi-ethnic Triple Alliance (Aztec Empire), culinary foodways became infused (Aztec cuisine).",
                            ImageUrl = "https://images.squarespace-cdn.com/content/v1/53b839afe4b07ea978436183/1619636932396-6DZZR1WGINWYADFUCU9I/popular-food-in-mexico.jpg?format=1000w",
                            Name = "Mexican Cuisine"
                        },
                        new
                        {
                            Id = new Guid("a6521833-8514-4d09-b7c0-9ee03373ffc5"),
                            Description = "Bulgarian cuisine is a representative of the cuisine of Southeast Europe. It shares characteristics with other Balkan cuisines. Bulgarian cooking traditions are diverse because of geographical factors such as climatic conditions suitable for a variety of vegetables, herbs, and fruit. Aside from the vast variety of local Bulgarian dishes, Bulgarian cuisine shares a number of dishes with Persian, Turkish, and Greek cuisine.Bulgarian food often incorporates salads as appetizers and is also noted for the prominence of dairy products, wines and other alcoholic drinks such as rakia.",
                            ImageUrl = "https://i-winereview.com/blog/wp-content/uploads/2018/05/Header-BulgariaFood-1.jpg",
                            Name = "Bulgarian Cuisine"
                        });
                });

            modelBuilder.Entity("CookingTrickery.Infrastructure.Data.Entities.Ingredient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Calories")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3ea505ff-7e9a-4540-8100-182123ce9605"),
                            Calories = 40,
                            Description = "An onion , also known as the bulb onion or common onion, is a vegetable that is the most widely cultivated species of the genus Allium.",
                            ImageUrl = "https://images.immediate.co.uk/production/volatile/sites/30/2020/08/the-health-benefits-of-onions-main-image-700-350-8425535.jpg?quality=90&webp=true&resize=300,272",
                            Name = "Onion",
                            Origin = "Central Asia",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("6e56c040-63ec-4fa8-9c87-ba3a1a732a22"),
                            Calories = 384,
                            Description = "Olive oil is a liquid fat obtained from olives (the fruit of Olea europaea; family Oleaceae), a traditional tree crop of the Mediterranean Basin.",
                            ImageUrl = "https://europa.eu/food-match-japan/sites/default/files/2019-11/gen-content-bloc_1272x720_olive-oil-part-of-healthy_1139661885.jpg",
                            Name = "Olive Oil",
                            Origin = "Ancient Greek",
                            Type = 3
                        },
                        new
                        {
                            Id = new Guid("0f09aa47-294d-44d4-a0a4-a275ea55e6bc"),
                            Calories = 41,
                            Description = "The carrot (Daucus carota subsp. sativus) is a root vegetable, typically orange in color, though purple, black, red, white, and yellow cultivars exist",
                            ImageUrl = "https://europa.eu/food-match-japan/sites/default/files/2019-11/gen-content-bloc_1272x720_olive-oil-part-of-healthy_1139661885.jpg",
                            Name = "Carrot",
                            Origin = "Central Asia",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("9752dbe2-cf14-4393-bbd7-f28fa6ff617b"),
                            Calories = 149,
                            Description = "Garlic (Allium sativum) is a species of bulbous flowering plant in the genus Allium. Its close relatives include the onion, shallot, leek, chive,",
                            ImageUrl = "https://5.imimg.com/data5/SELLER/Default/2020/11/ZY/NB/EM/66520044/single-clove-garlic-500x500.jpg",
                            Name = "Garlic",
                            Origin = "Middle East",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("485c2be4-8417-4ed1-90b6-467cbce9d46a"),
                            Calories = 77,
                            Description = "The potato is a starchy tuber of the plant Solanum tuberosum and is a root vegetable native to the Americas.",
                            ImageUrl = "https://www.alimentarium.org/sites/default/files/media/image/2017-02/AL027-01_pomme_de_terre_0_0.jpg",
                            Name = "Potato",
                            Origin = "South America",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("36d126d9-e4ae-47e7-ac09-937e0a8ebf6d"),
                            Calories = 250,
                            Description = "Beef is the culinary name for meat from cattle (Bos taurus).In prehistoric times, humankind hunted aurochs and later domesticated them.",
                            ImageUrl = "https://cdn.britannica.com/68/143268-050-917048EA/Beef-loin.jpg",
                            Name = "Beef",
                            Origin = "All over the world",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("ca39cc0d-6b7c-4226-a912-80bd7a56e7e7"),
                            Calories = 100,
                            Description = "Beef broth is usually the liquid meat is cooked in, sometimes with added vegetables.",
                            ImageUrl = "https://www.recipetineats.com/wp-content/uploads/2021/02/Homemade-Beef-Stock_1.jpg?resize=650,910",
                            Name = "Beef broth",
                            Origin = "All over the world",
                            Type = 22
                        },
                        new
                        {
                            Id = new Guid("39af066a-8e5b-4942-bd68-932714284d66"),
                            Calories = 78,
                            Description = "Worcestershire sauce, sometimes called Worcester sauce, is a fermented liquid condiment invented in the city of Worcester in Worcestershire, England, during the first half of the 19th century.",
                            ImageUrl = "https://www.thespruceeats.com/thmb/d6Tzgm4-oztmI9RZqt_VQXM2jhc=/1500x0/filters:no_upscale():max_bytes(150000):strip_icc():format(webp)/worcestershire-sauce-ingredients-1808089-bc73c8213ae34262bb0f01ce03fbb806.jpg",
                            Name = "Worcestershire sauce",
                            Origin = "United Kingdom",
                            Type = 4
                        },
                        new
                        {
                            Id = new Guid("28aeedac-d707-4ae8-8404-fcf89a3719a3"),
                            Calories = 82,
                            Description = "Tomato paste is a thick paste made by cooking tomatoes for several hours to reduce the water content, straining out the seeds and skins, and cooking the liquid again to reduce the base to a thick, rich concentrate.",
                            ImageUrl = "https://www.preciouscore.com/wp-content/uploads/2022/07/Homemade-Tomato-Paste-683x1024.jpg",
                            Name = "Tomato paste",
                            Origin = "All over the world",
                            Type = 25
                        },
                        new
                        {
                            Id = new Guid("551e0516-e39a-4359-8211-d97e4152abcc"),
                            Calories = 1,
                            Description = "Thyme has always been a considered a plant that could grant courage. ",
                            ImageUrl = "https://www.spicejungle.com/media/catalog/product/cache/77bee113a8ac4baedd074d0e50f9761e/t/h/thymemacro_2.jpg",
                            Name = "Dried thyme",
                            Origin = "Mediterranean region",
                            Type = 11
                        },
                        new
                        {
                            Id = new Guid("3a48aa8a-d9a3-43f5-bc8b-d98d1515ec43"),
                            Calories = 1,
                            Description = "Though originally from Europe and the Mediterranean, many Americans see it as a classic and patriotic spice.",
                            ImageUrl = "https://www.forestwholefoods.co.uk/wp-content/uploads/2017/04/Organic-Dried-Rosemary-1500px.jpg",
                            Name = "Dried rosemary",
                            Origin = "Europe",
                            Type = 11
                        },
                        new
                        {
                            Id = new Guid("e1e685ec-4798-4ee4-97b9-c3df854461bc"),
                            Calories = 1,
                            Description = "Caraway, also known as meridian fennel and Persian cumin (Carum carvi), is a biennial plant in the family Apiaceae, native to western Asia, Europe, and North Africa",
                            ImageUrl = "https://www.nutrition-and-you.com/image-files/xcaraway-seed-300x300.jpg.pagespeed.ic.jXLVdeaHWl.jpg",
                            Name = "Caraway seeds",
                            Origin = "All over the world",
                            Type = 11
                        },
                        new
                        {
                            Id = new Guid("e61604a4-9f1e-45db-b840-b82e7327cd28"),
                            Calories = 1,
                            Description = "The bay leaf is an aromatic leaf commonly used in cooking. It can be used whole, either dried or fresh, in which case it is removed from the dish before consumption, or less commonly used in ground form.",
                            ImageUrl = "https://images.healthshots.com/healthshots/en/uploads/2021/06/25172258/health-benefits-of-bay-leaf.jpg",
                            Name = "Bay leaves",
                            Origin = "Mediterranean region",
                            Type = 11
                        },
                        new
                        {
                            Id = new Guid("630c4443-28ff-4aba-a48b-6dbe6c64b033"),
                            Calories = 1,
                            Description = "Flour is a powder made by grinding raw grains, roots, beans, nuts, or seeds.",
                            ImageUrl = "https://pediaa.com/wp-content/uploads/2014/11/What-is-All-Purpose-Flour-01.jpg",
                            Name = "All-purpose Flour",
                            Origin = "All over the world",
                            Type = 13
                        },
                        new
                        {
                            Id = new Guid("52a20631-47f3-45c7-a1fe-a41802908375"),
                            Calories = 5,
                            Description = "Parsley, or garden parsley (Petroselinum crispum) is a species of flowering plant in the family Apiaceae that is native to the central and eastern Mediterranean region ",
                            ImageUrl = "https://cdn.shopify.com/s/files/1/0458/5780/0360/products/eumundi-farm-fresh-parsley_720x.jpg?v=1647373473",
                            Name = "Fresh Parsley",
                            Origin = "Mediterranean region",
                            Type = 10
                        },
                        new
                        {
                            Id = new Guid("47b234b1-5a56-4c29-a0ff-73994c4175d3"),
                            Calories = 47,
                            Description = "An orange is a fruit of various citrus species in the family Rutaceae it primarily refers to Citrus × sinensis, which is also called sweet orange, to distinguish it from the related Citrus × aurantium, referred to as bitter orange.",
                            ImageUrl = "https://www.santosfood.com/wp-content/uploads/2020/01/img-7.jpg?1742x1295",
                            Name = "Orange",
                            Origin = "China",
                            Type = 12
                        },
                        new
                        {
                            Id = new Guid("bdfce3b9-39d0-49b3-8393-48f18bf2b134"),
                            Calories = 0,
                            Description = "Salmon is the common name for several commercially important species of euryhaline ray-finned fish from the family Salmonidae, which are native to tributaries of the North Atlantic (genus Salmo) and North Pacific basin. Other closely related fish in the same family include trout, char, grayling, whitefish, lenok and taimen.",
                            ImageUrl = "https://img.freepik.com/free-photo/raw-salmon-meat_74190-1592.jpg?w=1380&t=st=1668534014~exp=1668534614~hmac=e1cb4b7b026444b95a5c0c5f9ec2f456568e1d925029a11b6792b9481562f92f",
                            Name = "Salmon",
                            Origin = "Ocean",
                            Type = 5
                        },
                        new
                        {
                            Id = new Guid("a38a088d-3fef-4086-8f95-b088cdc067db"),
                            Calories = 0,
                            Description = "An egg is an organic vessel grown by an animal to carry a possibly fertilized egg cell (a zygote) and to incubate from it an embryo within the egg until the embryo has become an animal fetus that can survive on its own, at which point the animal hatches.",
                            ImageUrl = "https://i.guim.co.uk/img/media/db9a96e1251a41a215ada849407983cedadc2fbb/0_252_2574_1545/master/2574.jpg?width=620&quality=85&dpr=1&s=none",
                            Name = "Egg",
                            Origin = "All over the world",
                            Type = 6
                        },
                        new
                        {
                            Id = new Guid("072818d1-6852-473a-b27b-803559c2de35"),
                            Calories = 0,
                            Description = "Milk is a white liquid food produced by the mammary glands of mammals. It is the primary source of nutrition for young mammals (including breastfed human infants) before they are able to digest solid food Immune factors and immune-modulating components in milk contribute to milk immunity.",
                            ImageUrl = "https://solidstarts.com/wp-content/uploads/Milk-for-Babies-480x320.webp",
                            Name = "Milk",
                            Origin = "All over the world",
                            Type = 7
                        },
                        new
                        {
                            Id = new Guid("63cd1418-5533-4056-a82e-61d1cba11370"),
                            Calories = 0,
                            Description = "Parmesan (Italian: Parmigiano Reggiano; Italian pronunciation: [parmiˈdʒaːno redˈdʒaːno]) is an Italian hard, granular cheese produced from cows’ milk and aged at least 12 months.",
                            ImageUrl = "https://images.immediate.co.uk/production/volatile/sites/30/2020/02/parmesan-00f8b31.jpg?quality=90&webp=true&resize=300,272",
                            Name = "Parmesan",
                            Origin = "Italy",
                            Type = 8
                        },
                        new
                        {
                            Id = new Guid("918df8b2-4cfb-457b-8eec-23fa0fc35a2f"),
                            Calories = 0,
                            Description = "Cream fresh is a dairy product, a soured cream containing 10–45% butterfat, with a pH of approximately 4.5. It is soured with a bacterial culture.",
                            ImageUrl = "https://images.immediate.co.uk/production/volatile/sites/30/2020/02/parmesan-00f8b31.jpg?quality=90&webp=true&resize=300,272",
                            Name = "Cream fresh",
                            Origin = "France",
                            Type = 9
                        },
                        new
                        {
                            Id = new Guid("2b4a94a0-0693-4b75-9667-a57cdf3d576e"),
                            Calories = 0,
                            Description = "Cream fresh is a dairy product, a soured cream containing 10–45% butterfat, with a pH of approximately 4.5. It is soured with a bacterial culture.",
                            ImageUrl = "https://images.immediate.co.uk/production/volatile/sites/30/2020/02/parmesan-00f8b31.jpg?quality=90&webp=true&resize=300,272",
                            Name = "Cream fresh",
                            Origin = "France",
                            Type = 9
                        },
                        new
                        {
                            Id = new Guid("653294cb-c5fd-4c51-a470-25854918fb9d"),
                            Calories = 0,
                            Description = "Merguez s a red, spicy mutton- or beef-based fresh sausage in Maghrebi cuisine.[1][2] Since the late 20th century, it has been popular in France and Great Britain due to the large Algerian populations",
                            ImageUrl = "https://thegourmetgoatfarmer.co.uk/wp-content/uploads/2021/01/Merguez-Sausages-600x461.jpg",
                            Name = "Merguez",
                            Origin = "Africa",
                            Type = 14
                        },
                        new
                        {
                            Id = new Guid("0d4d9a46-26f5-4ec4-872a-80afae65b2b2"),
                            Calories = 0,
                            Description = "Linguine sometimes anglicized as linguini is a type of pasta similar to fettuccine and trenette but elliptical in section rather than flat.",
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/commons/d/da/Linguine.jpg",
                            Name = "Linguine",
                            Origin = "Italy",
                            Type = 15
                        },
                        new
                        {
                            Id = new Guid("07a09f60-233b-4ff3-bf95-b702917ae703"),
                            Calories = 0,
                            Description = "Squid Ink is a dark-coloured or luminous ink released into water by most species of cephalopod, usually as an escape mechanism. Modern use of cephalopod ink is generally limited to cooking, primarily in Japan and the Mediterranean, where it is used as a food colouring and flavouring, for example in pasta and sauces, and calamares en su tinta.",
                            ImageUrl = "https://chgojohn.files.wordpress.com/2015/12/squid-ink.jpg",
                            Name = "Squid Ink",
                            Origin = "Ocean",
                            Type = 16
                        },
                        new
                        {
                            Id = new Guid("9b553652-138e-44c1-92a0-253cda2f7d79"),
                            Calories = 0,
                            Description = "Squid Ink is a dark-coloured or luminous ink released into water by most species of cephalopod, usually as an escape mechanism. Modern use of cephalopod ink is generally limited to cooking, primarily in Japan and the Mediterranean, where it is used as a food colouring and flavouring, for example in pasta and sauces, and calamares en su tinta.",
                            ImageUrl = "https://media.npr.org/assets/img/2017/02/23/butter1_custom-340e5902a868b66b8f11aca60a5b2eed334971eb-s800-c85.webp",
                            Name = "Butter",
                            Origin = "All over the world",
                            Type = 17
                        },
                        new
                        {
                            Id = new Guid("c78e46a6-76aa-40ed-945e-a50b7804d543"),
                            Calories = 0,
                            Description = "The pistachio a member of the cashew family, is a small tree originating from Central Asia and the Middle East. The tree produces seeds that are widely consumed as food.",
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/commons/thumb/f/f1/Pistachio_macro_whitebackground_NS.jpg/220px-Pistachio_macro_whitebackground_NS.jpg",
                            Name = "Pistacio",
                            Origin = "Middle East",
                            Type = 18
                        },
                        new
                        {
                            Id = new Guid("9ffc3a81-a39d-4c36-83c8-2a7a043a947d"),
                            Calories = 0,
                            Description = "Multigrain bread is made with different types of flour and Theobroma’s multigrain loaf offers you the goodness of 8 different types of flour. This includes jowar, ragi, soya, oats and whole wheat flour.",
                            ImageUrl = "https://www.seasonsandsuppers.ca/wp-content/uploads/2021/09/multigrain-bread-1200-600x600.jpg",
                            Name = "Multigrain Loaf",
                            Origin = "All over the world",
                            Type = 19
                        },
                        new
                        {
                            Id = new Guid("94bbb0e7-a4a9-4948-b6ae-e69959c71c62"),
                            Calories = 0,
                            Description = "Cognac is a variety of brandy named after the commune of Cognac, France. It is produced in the surrounding wine-growing region in the departments of Charente and Charente-Maritime.Cognac production falls under French appellation d'origine contrôlée designation, with production methods and naming required to meet certain legal requirements. Among the specified grapes, Ugni blanc, known locally as Saint-Émilion, is most widely used.",
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/commons/thumb/a/a0/Cognac_glass_-_tulip_shaped.JPG/800px-Cognac_glass_-_tulip_shaped.JPG",
                            Name = "Cognac",
                            Origin = "France",
                            Type = 20
                        },
                        new
                        {
                            Id = new Guid("88bb61fd-478a-4431-ba19-3b45230656eb"),
                            Calories = 0,
                            Description = "Peas are annual plants, with a life cycle of one year. They are a cool-season crop grown in many parts of the world, planting can take place from winter to early summer depending on location. The average pea weighs between 0.1 and 0.36 gram.The immature peas (and in snow peas the tender pod as well) are used as a vegetable, fresh, frozen or canned, varieties of the species typically called field peas are grown to produce dry peas like the split pea shelled from a matured pod.",
                            ImageUrl = "https://www.almanac.com/sites/default/files/styles/max_1300x1300/public/image_nodes/peas-and-pea-pods.jpg?itok=qWmqcepy",
                            Name = "Peas",
                            Origin = "Mediterranean region",
                            Type = 21
                        },
                        new
                        {
                            Id = new Guid("38ff0d4d-96df-4f76-9735-4510801e721b"),
                            Calories = 0,
                            Description = "rborio rice is an Italian short-grain rice. It is named after the town of Arborio, in the Po Valley, which is situated in the region of Piedmont in Italy. When cooked, the rounded grains are firm, and creamy and chewy compared to other varieties of rice, due to their higher amylopectin starch content It has a starchy taste and blends well with other flavours.",
                            ImageUrl = "https://cdn.apartmenttherapy.info/image/upload/f_auto,q_auto:eco,c_fill,g_center,w_730,h_487/k%2FPhoto%2FSeries%2F2021-03-rice-o-pedia%2FArborio-Rice%2F2021-03-30_ATK-48176-Rice-Arborio",
                            Name = "Arborio rice",
                            Origin = "Italy",
                            Type = 23
                        },
                        new
                        {
                            Id = new Guid("0add8fdc-b4d9-4ea6-bc0b-89d0801d204e"),
                            Calories = 0,
                            Description = "Honey is a sweet and viscous substance made by several bees, the best-known of which are honey bees.Honey is made and stored to nourish bee colonies. Bees produce honey by gathering and then refining the sugary secretions of plants (primarily floral nectar) or the secretions of other insects, like the honeydew of aphids.",
                            ImageUrl = "https://5.imimg.com/data5/YH/RH/MY-43324479/natural-honey-1000x1000.jpg",
                            Name = "Honey",
                            Origin = "All over the world",
                            Type = 24
                        },
                        new
                        {
                            Id = new Guid("7e7b0452-876f-428c-b56c-61c13663e629"),
                            Calories = 0,
                            Description = "Water is an inorganic, transparent, tasteless, odorless, and nearly colorless chemical substance, which is the main constituent of Earth's hydrosphere and the fluids of all known living organisms. It is vital for all known forms of life, despite providing neither food, energy, nor organic micronutrients",
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/commons/thumb/5/5e/Water_drop_001.jpg/1920px-Water_drop_001.jpg",
                            Name = "Water",
                            Origin = "All over the world",
                            Type = 26
                        });
                });

            modelBuilder.Entity("CookingTrickery.Infrastructure.Data.Entities.IngredientMeasurement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IngredientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MeasurementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("MeasurementId");

                    b.HasIndex("RecipeId");

                    b.ToTable("IngredientMeasurements");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8b6883eb-c59b-4ea3-b295-9e9de6881961"),
                            IngredientId = new Guid("3ea505ff-7e9a-4540-8100-182123ce9605"),
                            MeasurementId = new Guid("df4924db-cdc2-44f4-9ab0-b181c26c5e93"),
                            RecipeId = new Guid("b169fcbd-cde5-4a5b-8ab7-258572d98f8f")
                        },
                        new
                        {
                            Id = new Guid("83674210-f4dd-45d6-bafd-08d0c41cd377"),
                            IngredientId = new Guid("0f09aa47-294d-44d4-a0a4-a275ea55e6bc"),
                            MeasurementId = new Guid("27c6be3e-3404-4525-9a05-b3b4811ad2dd"),
                            RecipeId = new Guid("b169fcbd-cde5-4a5b-8ab7-258572d98f8f")
                        },
                        new
                        {
                            Id = new Guid("6a26c5ae-76d0-4c62-bf05-099c6c91cadc"),
                            IngredientId = new Guid("9752dbe2-cf14-4393-bbd7-f28fa6ff617b"),
                            MeasurementId = new Guid("a6cd1e21-4010-4bfc-8b31-be5776aa2a7a"),
                            RecipeId = new Guid("b169fcbd-cde5-4a5b-8ab7-258572d98f8f")
                        },
                        new
                        {
                            Id = new Guid("9e8902ca-1b4d-4cf1-ac7a-10bbd83e0b41"),
                            IngredientId = new Guid("485c2be4-8417-4ed1-90b6-467cbce9d46a"),
                            MeasurementId = new Guid("c2106501-d1ce-4eb0-9c91-82a4898fcb67"),
                            RecipeId = new Guid("b169fcbd-cde5-4a5b-8ab7-258572d98f8f")
                        },
                        new
                        {
                            Id = new Guid("f2cf0b9e-5833-4e35-a702-4a9fbf894fe0"),
                            IngredientId = new Guid("36d126d9-e4ae-47e7-ac09-937e0a8ebf6d"),
                            MeasurementId = new Guid("dec7d41c-542f-41be-8ca4-e95aaa5a1fdd"),
                            RecipeId = new Guid("b169fcbd-cde5-4a5b-8ab7-258572d98f8f")
                        },
                        new
                        {
                            Id = new Guid("b7741e3d-743b-4aef-b20d-c6a81596ae83"),
                            IngredientId = new Guid("ca39cc0d-6b7c-4226-a912-80bd7a56e7e7"),
                            MeasurementId = new Guid("8b1d8496-58a3-405f-8bc2-036867407274"),
                            RecipeId = new Guid("b169fcbd-cde5-4a5b-8ab7-258572d98f8f")
                        },
                        new
                        {
                            Id = new Guid("b4ab7081-66da-4475-b74c-fe884afdaf70"),
                            IngredientId = new Guid("39af066a-8e5b-4942-bd68-932714284d66"),
                            MeasurementId = new Guid("451e6845-3dde-44fa-9787-37d2f12fab0b"),
                            RecipeId = new Guid("b169fcbd-cde5-4a5b-8ab7-258572d98f8f")
                        },
                        new
                        {
                            Id = new Guid("6aa10633-e0b0-4fe7-b51b-648ec0317eb7"),
                            IngredientId = new Guid("28aeedac-d707-4ae8-8404-fcf89a3719a3"),
                            MeasurementId = new Guid("bb9b314b-faa4-4e3b-ac45-b0fd25aa987c"),
                            RecipeId = new Guid("b169fcbd-cde5-4a5b-8ab7-258572d98f8f")
                        },
                        new
                        {
                            Id = new Guid("1b35c331-ed11-4b77-8f3e-05bf7ab96514"),
                            IngredientId = new Guid("551e0516-e39a-4359-8211-d97e4152abcc"),
                            MeasurementId = new Guid("77264a66-b4a2-4657-abf7-9db4e7b1adf9"),
                            RecipeId = new Guid("b169fcbd-cde5-4a5b-8ab7-258572d98f8f")
                        },
                        new
                        {
                            Id = new Guid("910a86d1-d35e-423a-b987-7a7650f24087"),
                            IngredientId = new Guid("3a48aa8a-d9a3-43f5-bc8b-d98d1515ec43"),
                            MeasurementId = new Guid("b5a9d637-315c-416b-98f9-ee5f702833de"),
                            RecipeId = new Guid("b169fcbd-cde5-4a5b-8ab7-258572d98f8f")
                        },
                        new
                        {
                            Id = new Guid("b39e2204-0651-487c-8192-da80bdab12de"),
                            IngredientId = new Guid("6e56c040-63ec-4fa8-9c87-ba3a1a732a22"),
                            MeasurementId = new Guid("fadac7a7-abb2-4e75-93f4-b42ac441bed5"),
                            RecipeId = new Guid("b169fcbd-cde5-4a5b-8ab7-258572d98f8f")
                        });
                });

            modelBuilder.Entity("CookingTrickery.Infrastructure.Data.Entities.Measurement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MeasurementType")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Measurements");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fadac7a7-abb2-4e75-93f4-b42ac441bed5"),
                            MeasurementType = 4,
                            Quantity = 2.0
                        },
                        new
                        {
                            Id = new Guid("dec7d41c-542f-41be-8ca4-e95aaa5a1fdd"),
                            MeasurementType = 3,
                            Quantity = 2.0
                        },
                        new
                        {
                            Id = new Guid("c2106501-d1ce-4eb0-9c91-82a4898fcb67"),
                            MeasurementType = 3,
                            Quantity = 1.0
                        },
                        new
                        {
                            Id = new Guid("27c6be3e-3404-4525-9a05-b3b4811ad2dd"),
                            MeasurementType = 14,
                            Quantity = 4.0
                        },
                        new
                        {
                            Id = new Guid("df4924db-cdc2-44f4-9ab0-b181c26c5e93"),
                            MeasurementType = 14,
                            Quantity = 1.0
                        },
                        new
                        {
                            Id = new Guid("a6cd1e21-4010-4bfc-8b31-be5776aa2a7a"),
                            MeasurementType = 13,
                            Quantity = 3.0
                        },
                        new
                        {
                            Id = new Guid("100248f5-ce7f-40ca-abc8-c0d005c8a988"),
                            MeasurementType = 16,
                            Quantity = 3.0
                        },
                        new
                        {
                            Id = new Guid("bb9b314b-faa4-4e3b-ac45-b0fd25aa987c"),
                            MeasurementType = 4,
                            Quantity = 2.0
                        },
                        new
                        {
                            Id = new Guid("451e6845-3dde-44fa-9787-37d2f12fab0b"),
                            MeasurementType = 4,
                            Quantity = 1.0
                        },
                        new
                        {
                            Id = new Guid("77264a66-b4a2-4657-abf7-9db4e7b1adf9"),
                            MeasurementType = 5,
                            Quantity = 1.0
                        },
                        new
                        {
                            Id = new Guid("b5a9d637-315c-416b-98f9-ee5f702833de"),
                            MeasurementType = 5,
                            Quantity = 1.0
                        },
                        new
                        {
                            Id = new Guid("63cd695b-d2fc-42b7-9e1c-633e1dcec351"),
                            MeasurementType = 5,
                            Quantity = 1.0
                        },
                        new
                        {
                            Id = new Guid("8b1d8496-58a3-405f-8bc2-036867407274"),
                            MeasurementType = 5,
                            Quantity = 1.0
                        },
                        new
                        {
                            Id = new Guid("717496fb-5b3c-439f-bc15-dd74381d6d7d"),
                            MeasurementType = 15,
                            Quantity = 2.0
                        },
                        new
                        {
                            Id = new Guid("1ac5b1b6-9dbb-49fc-ad95-686476a0fb57"),
                            MeasurementType = 12,
                            Quantity = 0.5
                        },
                        new
                        {
                            Id = new Guid("d45f0662-ae2e-47ce-b662-8e459b3f0e0e"),
                            MeasurementType = 4,
                            Quantity = 2.0
                        });
                });

            modelBuilder.Entity("CookingTrickery.Infrastructure.Data.Entities.Recipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CuisineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<int>("NumberOfServing")
                        .HasColumnType("int");

                    b.Property<string>("PrepTime")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("QuickDescription")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<double?>("Rating")
                        .HasColumnType("float");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CuisineId");

                    b.HasIndex("UserId");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b169fcbd-cde5-4a5b-8ab7-258572d98f8f"),
                            CreatedOn = new DateTime(2022, 11, 15, 20, 36, 47, 770, DateTimeKind.Local).AddTicks(3929),
                            CuisineId = new Guid("ff8540f2-e7c9-4546-a7d9-f25b42c72b50"),
                            Description = "Heat olive oil in a large cast iron skillet over medium heat.Season beef with salt and pepper, to taste. Add beef to the skillet and cook until evenly browned, about 2-3 minutes.Place beef, potatoes, carrots, onion and garlic into a 6-qt slow cooker. Stir in beef broth, tomato paste, Worcestershire, thyme, rosemary, paprika, caraway seeds and bay leaves until well combined; season with salt and pepper, to taste.Cover and cook on low heat for 7-8 hours or high heat for 3-4 hours.In a small bowl, whisk together flour and 1/2 cup stew broth. Stir in flour mixture into the slow cooker. Cover and cook on high heat for an additional 30 minutes, or until thickened.Serve immediately, garnished with parsley, if desired.",
                            ImageUrl = "https://s23209.pcdn.co/wp-content/uploads/2016/10/221024_DD_Slow-Cooker-Beef-Stew_218-760x1140.jpg",
                            Name = "Slow Cooked Beef Stew",
                            NumberOfServing = 4,
                            PrepTime = "8 hours",
                            QuickDescription = "Everyone’s favorite cozy beef stew made in the crockpot! The meat is SO TENDER and the stew is rich",
                            UserId = "0093ae6c-d848-43bf-bc62-01c5e684f4a4"
                        });
                });

            modelBuilder.Entity("CookingTrickery.Infrastructure.Data.Entities.UsersFavorites", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RecipeId");

                    b.HasIndex("RecipeId");

                    b.ToTable("UserRecipes");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("CookingTrickery.Infrastructure.Data.Entities.User", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<Guid?>("FavoriteCuisineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasIndex("FavoriteCuisineId");

                    b.HasDiscriminator().HasValue("User");

                    b.HasData(
                        new
                        {
                            Id = "0093ae6c-d848-43bf-bc62-01c5e684f4a4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d8dd777e-d87e-4ccb-a944-49291c143bb5",
                            Email = "f.g.hristov@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "F.G.HRISTOV@GMAIL.COM",
                            NormalizedUserName = "FROZSTY",
                            PasswordHash = "AQAAAAEAACcQAAAAEHNdtfIBKB9lTVcIa/tXpSNV1Ze54iYG9u9zHh1rrnFd8k9MPs+xo2ufl/3L80uPdw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ae2c9a8d-ad62-4cfc-b2b3-e7625b070865",
                            TwoFactorEnabled = false,
                            UserName = "Frozsty",
                            FirstName = "Filip",
                            LastName = "Hristov"
                        },
                        new
                        {
                            Id = "bc60d5f7-3884-42c6-9fb5-e1db55094536",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "39199cbc-5f5a-443c-83f5-9f9c555d250c",
                            Email = "guest@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "GUEST@GMAIL.COM",
                            NormalizedUserName = "GUEST",
                            PasswordHash = "AQAAAAEAACcQAAAAELJ8jeuzZuzrznsXPjYs00pb/sxdPUHSdK4Kqosh93JDrIOghOUAGuQenteA48tFxg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e1fa660f-e9de-47a7-8325-d1643aaf087b",
                            TwoFactorEnabled = false,
                            UserName = "Guest",
                            FirstName = "Petar",
                            LastName = "Petrov"
                        });
                });

            modelBuilder.Entity("CookingTrickery.Infrastructure.Data.Entities.IngredientMeasurement", b =>
                {
                    b.HasOne("CookingTrickery.Infrastructure.Data.Entities.Ingredient", "Ingredient")
                        .WithMany("IngredientsMeasurements")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CookingTrickery.Infrastructure.Data.Entities.Measurement", "Measurement")
                        .WithMany("IngredientsMeasurements")
                        .HasForeignKey("MeasurementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CookingTrickery.Infrastructure.Data.Entities.Recipe", "Recipe")
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Measurement");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("CookingTrickery.Infrastructure.Data.Entities.Recipe", b =>
                {
                    b.HasOne("CookingTrickery.Infrastructure.Data.Entities.Cuisine", "Cuisine")
                        .WithMany("Recipes")
                        .HasForeignKey("CuisineId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CookingTrickery.Infrastructure.Data.Entities.User", "User")
                        .WithMany("UserRecipes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cuisine");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CookingTrickery.Infrastructure.Data.Entities.UsersFavorites", b =>
                {
                    b.HasOne("CookingTrickery.Infrastructure.Data.Entities.Recipe", "Recipe")
                        .WithMany("UsersFavorites")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CookingTrickery.Infrastructure.Data.Entities.User", "User")
                        .WithMany("FavoriteRecipes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CookingTrickery.Infrastructure.Data.Entities.User", b =>
                {
                    b.HasOne("CookingTrickery.Infrastructure.Data.Entities.Cuisine", "FavoriteCuisine")
                        .WithMany("UsersFavorites")
                        .HasForeignKey("FavoriteCuisineId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("FavoriteCuisine");
                });

            modelBuilder.Entity("CookingTrickery.Infrastructure.Data.Entities.Cuisine", b =>
                {
                    b.Navigation("Recipes");

                    b.Navigation("UsersFavorites");
                });

            modelBuilder.Entity("CookingTrickery.Infrastructure.Data.Entities.Ingredient", b =>
                {
                    b.Navigation("IngredientsMeasurements");
                });

            modelBuilder.Entity("CookingTrickery.Infrastructure.Data.Entities.Measurement", b =>
                {
                    b.Navigation("IngredientsMeasurements");
                });

            modelBuilder.Entity("CookingTrickery.Infrastructure.Data.Entities.Recipe", b =>
                {
                    b.Navigation("Ingredients");

                    b.Navigation("UsersFavorites");
                });

            modelBuilder.Entity("CookingTrickery.Infrastructure.Data.Entities.User", b =>
                {
                    b.Navigation("FavoriteRecipes");

                    b.Navigation("UserRecipes");
                });
#pragma warning restore 612, 618
        }
    }
}
